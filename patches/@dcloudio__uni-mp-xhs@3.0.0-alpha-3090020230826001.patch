diff --git a/dist/uni.compiler.js b/dist/uni.compiler.js
index 5f8077542fea02a3f47bf1e0d080b7b4b3d90794..488e78b7c77a9f1c02aeeda5e278423935a53787 100644
--- a/dist/uni.compiler.js
+++ b/dist/uni.compiler.js
@@ -3,6 +3,7 @@
 var uniCliShared = require('@dcloudio/uni-cli-shared');
 var initMiniProgramPlugin = require('@dcloudio/uni-mp-vite');
 var path = require('path');
+var uniMpCompiler = require('@dcloudio/uni-mp-compiler');
 
 function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }
 
@@ -59,7 +60,14 @@ var source = {
 	condition: condition
 };
 
-const directiveTransforms = {};
+const transformOn = uniCliShared.createTransformOn(uniMpCompiler.transformOn);
+
+const transformModel = uniCliShared.createTransformModel(uniMpCompiler.transformModel);
+
+const directiveTransforms = {
+    on: transformOn,
+    model: transformModel,
+};
 const compilerOptions = {
     nodeTransforms: [uniCliShared.transformRef, uniCliShared.transformComponentLink, uniCliShared.transformMatchMedia],
     directiveTransforms,
diff --git a/dist/uni.mp.esm.js b/dist/uni.mp.esm.js
index 2519784f5eddd839520473e4675983f12ad1f799..65edbafd67fba6b023ca00be77c7f0a282096947 100644
--- a/dist/uni.mp.esm.js
+++ b/dist/uni.mp.esm.js
@@ -551,7 +551,11 @@ function updateComponentProps(up, instance) {
             invalidateJob(instance.update);
         }
         {
-            instance.update();
+            // 字节跳动小程序 https://github.com/dcloudio/uni-app/issues/3340
+            // 百度小程序 https://github.com/dcloudio/uni-app/issues/3612
+            if (!hasQueueJob(instance.update)) {
+                instance.update();
+            }
         }
     }
 }
@@ -858,23 +862,22 @@ function initCreatePage() {
                 };
                 // 初始化 vue 实例
                 this.props = query;
+                this.$vm = createVueComponent('page', this, vueOptions);
+                initSpecialMethods(this);
+                this.$vm.$callHook(ON_LOAD, this.options);
             },
             onShow() {
+                this.$vm.$callHook(ON_SHOW);
                 if (__VUE_PROD_DEVTOOLS__) {
                     devtoolsComponentAdded(this.$vm.$);
                 }
-                this.$vm = createVueComponent('page', this, vueOptions);
-                this.$vm.$callHook('mounted');
-                this.$vm.$callHook(ON_LOAD, this.options);
-                initSpecialMethods(this);
-                if (this.$vm) {
-                    this.$vm.$callHook(ON_SHOW);
-                }
             },
             onReady() {
+                // 确保页面自定义组件都被收集到
                 setTimeout(() => {
+                    this.$vm.$callHook('mounted');
                     this.$vm.$callHook(ON_READY);
-                }, 50);
+                }, 100);
             },
             onUnload() {
                 if (this.$vm) {
